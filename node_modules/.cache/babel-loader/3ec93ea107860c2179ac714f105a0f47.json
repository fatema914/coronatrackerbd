{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\Git Project\\\\coronatrackerbd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\Git Project\\\\coronatrackerbd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:\\\\Git Project\\\\coronatrackerbd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import{StylesProvider}from'@material-ui/core';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'rgba(255,0,0,0.5)',fill:true}]}}):null;console.log(confirmed,recovered,deaths);var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{lebel:'People',backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current status in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["E:/Git Project/coronatrackerbd/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","StylesProvider","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","console","log","barChart","lebel","backgroundColor","value","legend","display","title","text","container"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,cAAR,KAA6B,WAA7B,CACA,OAAQC,IAAR,CAAeC,GAAf,KAA0B,iBAA1B,CACA,OAASC,cAAT,KAA+B,mBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAgD,oBAA9CC,IAA8C,CAAxCC,SAAwC,WAAxCA,SAAwC,CAA9BC,SAA8B,WAA9BA,SAA8B,CAApBC,MAAoB,WAApBA,MAAoB,CAAZC,OAAY,MAAZA,OAAY,eACzBZ,QAAQ,CAAC,EAAD,CADiB,wCACnDa,SADmD,eACzCC,YADyC,eAG1Db,SAAS,CAAC,UAAM,CACZ,GAAMc,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMZ,CAAAA,cAAc,EADpB,qHAAH,kBAARa,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKP,EALO,CAAT,CAMA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cAEA,oBAAC,IAAD,EACA,IAAI,CACJ,CACIC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAEC,CAAAA,IAAF,OAAEA,IAAF,OAAUA,CAAAA,IAAV,EAAd,CADZ,CAEIC,QAAQ,CAAE,CAAC,CACPb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAEV,CAAAA,SAAF,OAAEA,SAAF,OAAiBA,CAAAA,SAAjB,EAAd,CADC,CAEPa,KAAK,CAAE,UAFA,CAGPC,WAAW,CAAE,SAHN,CAIPC,IAAI,CAAE,IAJC,CAAD,CAKR,CAEMhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAER,CAAAA,MAAF,OAAEA,MAAF,OAAYA,CAAAA,MAAZ,EAAd,CAFZ,CAGMW,KAAK,CAAE,QAHb,CAIMC,WAAW,CAAE,mBAJnB,CAKMC,IAAI,CAAE,IALZ,CALQ,CAFd,CAFA,EAFA,CAmBI,IApBR,CAsBAC,OAAO,CAACC,GAAR,CAAYjB,SAAZ,CAAsBC,SAAtB,CAAgCC,MAAhC,EACA,GAAMgB,CAAAA,QAAQ,CACVlB,SAAS,cACJ,oBAAC,GAAD,EACD,IAAI,CAAI,CAEJS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CAFJ,CAGJG,QAAQ,CAAC,CAAC,CACNO,KAAK,CAAC,QADA,CAEPC,eAAe,CAAE,CAAC,sBAAD,CAAyB,sBAAzB,CAAiD,sBAAjD,CAFV,CAGNrB,IAAI,CAAE,CAACC,SAAS,CAACqB,KAAX,CAAkBpB,SAAS,CAACoB,KAA5B,CAAmCnB,MAAM,CAACmB,KAA1C,CAHA,CAAD,CAHL,CADP,CAWD,OAAO,CAAE,CACLC,MAAM,CAAE,CAACC,OAAO,CAAC,KAAT,CADH,CAELC,KAAK,CAAE,CAACD,OAAO,CAAC,IAAT,CAAcE,IAAI,6BAAuBtB,OAAvB,CAAlB,CAFF,CAXR,EADI,CAiBP,IAlBN,CAoBA,mBACI,2BAAK,SAAS,CAAIN,MAAM,CAAC6B,SAAzB,EAEIvB,OAAO,CAAGe,QAAH,CAAaX,SAFxB,CADJ,CAOC,CA3DL,CA6DA,cAAeT,CAAAA,KAAf","sourcesContent":["import React ,{useState ,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line , Bar } from 'react-chartjs-2'\r\nimport { StylesProvider } from '@material-ui/core';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) =>{\r\n    const [dailyData,setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart = (\r\n        dailyData.length \r\n        ?(\r\n        <Line\r\n        data ={\r\n        {\r\n            labels: dailyData.map(({date})=>date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            },{\r\n                \r\n                    data: dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n            }],\r\n        }}\r\n        />):null\r\n    );\r\n    console.log(confirmed,recovered,deaths);\r\n    const barChart =(\r\n        confirmed ? (\r\n             <Bar \r\n            data = {{\r\n                \r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets:[{\r\n                    lebel:'People',\r\n                   backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n        ],\r\n    }}\r\n            options={{\r\n                legend: {display:false},\r\n                title: {display:true,text: `Current status in ${country}`},\r\n            }}\r\n            />\r\n        ):null\r\n    );\r\n    return(\r\n        <div className = {styles.container}>\r\n          \r\n           {country ? barChart :lineChart}\r\n        </div>\r\n       \r\n    );\r\n    };\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}