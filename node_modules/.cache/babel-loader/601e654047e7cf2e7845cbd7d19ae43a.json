{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\Git Project\\\\coronatrackerbd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\Git Project\\\\coronatrackerbd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url='https://covid19.mathdro.id/api';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changeURL,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changeURL=url;if(country){changeURL=\"\".concat(url,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changeURL);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data,modifiedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get('https://covid19.mathdro.id/api/daily');case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;//console.log(data);\nmodifiedData=data.map(function(dailyData){return{confirmed:dailyData.confirmed.total,deaths:dailyData.deaths.total,date:dailyData.reportDate};});//console.log(modifiedData);\nreturn _context2.abrupt(\"return\",modifiedData);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function fetchDailyData(){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get('https://covid19.mathdro.id/api/countries');case 3:_yield$axios$get3=_context3.sent;countries=_yield$axios$get3.data.countries;return _context3.abrupt(\"return\",countries.map(function(country){return country.name;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["E:/Git Project/coronatrackerbd/src/api/index.js"],"names":["axios","url","fetchData","country","changeURL","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"qTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAC,gCAAV,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,6MACjBC,SADiB,CACLH,GADK,CAEzB,GAAGE,OAAH,CAAW,CACPC,SAAS,WAAMH,GAAN,uBAAuBE,OAAvB,CAAT,CACH,CAJwB,sCAM+CH,CAAAA,KAAK,CAACK,GAAN,CAAUD,SAAV,CAN/C,8EAMTE,IANS,CAMDC,SANC,uBAMDA,SANC,CAMSC,SANT,uBAMSA,SANT,CAMmBC,MANnB,uBAMmBA,MANnB,CAM0BC,UAN1B,uBAM0BA,UAN1B,iCAOV,CAAEH,SAAS,CAATA,SAAF,CAAYC,SAAS,CAATA,SAAZ,CAAsBC,MAAM,CAANA,MAAtB,CAA6BC,UAAU,CAAVA,UAA7B,CAPU,iIAAH,kBAATR,CAAAA,SAAS,4CAAf,CAgBP,MAAO,IAAMS,CAAAA,cAAc,2FAAG,wNAEDX,CAAAA,KAAK,CAACK,GAAN,CAAU,sCAAV,CAFC,yCAEfC,IAFe,mBAEfA,IAFe,CAGtB;AACMM,YAJgB,CAIAN,IAAI,CAACO,GAAL,CAAS,SAACC,SAAD,QAAgB,CAC3CP,SAAS,CAAEO,SAAS,CAACP,SAAV,CAAoBQ,KADY,CAE3CN,MAAM,CAAGK,SAAS,CAACL,MAAV,CAAiBM,KAFiB,CAG3CC,IAAI,CAAEF,SAAS,CAACG,UAH2B,CAAhB,EAAT,CAJA,CAUtB;AAVsB,iCAWfL,YAXe,mIAAH,kBAAdD,CAAAA,cAAc,2CAApB,CAgBP,MAAO,IAAMO,CAAAA,cAAc,2FAAG,gNAEWlB,CAAAA,KAAK,CAACK,GAAN,CAAU,0CAAV,CAFX,yCAETc,SAFS,mBAEfb,IAFe,CAETa,SAFS,kCAIfA,SAAS,CAACN,GAAV,CAAc,SAACV,OAAD,QAAaA,CAAAA,OAAO,CAACiB,IAArB,EAAd,CAJe,mIAAH,kBAAdF,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeURL = url;\r\nif(country){\r\n    changeURL = `${url}/countries/${country}`;\r\n}\r\n    try{\r\n        const { data: { confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeURL);\r\n        return { confirmed,recovered,deaths,lastUpdate};\r\n       // const responce = await axios.get(url);\r\n       // return responce;\r\n    }\r\n    catch(error)\r\n    {\r\n\r\n    }\r\n}\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const {data} = await axios.get('https://covid19.mathdro.id/api/daily');\r\n        //console.log(data);\r\n        const modifiedData  = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n        }));\r\n        //console.log(modifiedData);\r\n        return modifiedData;\r\n    }catch(error){\r\n\r\n    }\r\n}\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data:{countries}} = await axios.get('https://covid19.mathdro.id/api/countries');\r\n        //console.log(response)\r\n        return countries.map((country) => country.name);\r\n    }\r\n    catch (error)\r\n    {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}